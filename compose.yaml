services:
  database:
    image: 'postgres:alpine'
    restart: 'unless-stopped'
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=cao
      - POSTGRES_PASSWORD=cao
      - POSTGRES_DB=cao
    volumes:
      - './0_DATA/data:/docker-entrypoint-initdb.d/'
    ports:
      - '127.0.0.1:5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cao"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: 'cosmtrek/air:v1.52.3' # Golang 1.22.4
    working_dir: '/app'
    volumes:
      - './:/app'
    environment:
      - DB_USERNAME=cao
      - DB_PASSWORD=cao
      - DB_DATABASE=cao
      - DB_HOST=database
      - DB_PORT=5432
    ports:
      - '127.0.0.1:8000:8000'
    healthcheck:
      test: curl --fail http://localhost:8000/healthcheck || exit 1
      interval: '10s'
      retries: 5
      start_period: '5s'
      timeout: '5s'
    depends_on:
      database:
        condition: service_healthy

  frontend:
    image: 'node:22'
    restart: 'unless-stopped'
    working_dir: '/app'
    volumes:
      - './frontend:/app'
    command: [ 'npm', 'run', 'dev']
    ports:
      - '127.0.0.1:5173:5173'
    depends_on:
      backend:
        condition: service_healthy

volumes:
  grafana:
